"""Updated models

Revision ID: 7e09950ea8fb
Revises: b78d241f4f44
Create Date: 2025-03-29 21:44:38.481722

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7e09950ea8fb'
down_revision: Union[str, None] = 'b78d241f4f44'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('appointment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_type', sa.String(length=255), nullable=False),
    sa.Column('date_from', sa.DateTime(), nullable=False),
    sa.Column('date_to', sa.DateTime(), nullable=False),
    sa.Column('registration_mandatory', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctor.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_constraint('request_calendar_id_fkey', 'request', type_='foreignkey')
    op.drop_table('calendar')
    op.add_column('doctor', sa.Column('specialization_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'doctor', 'doctor_specialization', ['specialization_id'], ['id'])
    op.drop_column('doctor', 'specialization')
    op.add_column('family_relation', sa.Column('patient_id', sa.Integer(), nullable=False))
    op.add_column('family_relation', sa.Column('related_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'family_relation', 'patient', ['related_id'], ['id'])
    op.create_foreign_key(None, 'family_relation', 'patient', ['patient_id'], ['id'])
    op.drop_column('family_relation', 'id')
    op.add_column('patient', sa.Column('email', sa.String(length=255), nullable=True))
    op.alter_column('patient', 'date_of_birth',
               existing_type=sa.DATE(),
               nullable=True)
    op.alter_column('patient', 'sex',
               existing_type=sa.VARCHAR(length=1),
               nullable=True)
    op.alter_column('patient', 'address',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.add_column('request', sa.Column('description', sa.String(length=255), nullable=True))
    op.add_column('request', sa.Column('appointment_id', sa.Integer(), nullable=True))
    op.alter_column('request', 'nurse_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('request', 'request_type_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    
    op.create_foreign_key(None, 'request', 'appointment', ['appointment_id'], ['id'])
    op.drop_column('request', 'calendar_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('request', sa.Column('calendar_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'request', type_='foreignkey')
    op.create_foreign_key('request_calendar_id_fkey', 'request', 'calendar', ['calendar_id'], ['id'])
    op.alter_column('request', 'request_type_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('request', 'nurse_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('request', 'appointment_id')
    op.drop_column('request', 'description')
    op.alter_column('patient', 'address',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('patient', 'sex',
               existing_type=sa.VARCHAR(length=1),
               nullable=False)
    op.alter_column('patient', 'date_of_birth',
               existing_type=sa.DATE(),
               nullable=False)
    op.drop_column('patient', 'email')
    op.add_column('family_relation', sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.drop_constraint(None, 'family_relation', type_='foreignkey')
    op.drop_constraint(None, 'family_relation', type_='foreignkey')
    op.drop_column('family_relation', 'related_id')
    op.drop_column('family_relation', 'patient_id')
    op.add_column('doctor', sa.Column('specialization', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'doctor', type_='foreignkey')
    op.drop_column('doctor', 'specialization_id')
    op.create_table('calendar',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('event_type', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('date_from', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('date_to', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('state', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('doctor_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctor.id'], name='calendar_doctor_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='calendar_pkey')
    )
    op.drop_table('appointment')
    # ### end Alembic commands ###
