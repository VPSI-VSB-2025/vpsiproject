"""Add missing columns

Revision ID: 33a42cb91b38
Revises: 
Create Date: 2025-03-23 14:26:43.687918

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.engine.reflection import Inspector


# revision identifiers, used by Alembic.
revision: str = '33a42cb91b38'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Check if column exists before trying to drop it
    conn = op.get_bind()
    inspector = Inspector.from_engine(conn)
    calendar_columns = [col['name'] for col in inspector.get_columns('calendar')]
    
    # Only try to drop constraint and column if it exists
    if 'request_id' in calendar_columns:
        # Drop any foreign key constraint first
        op.execute('ALTER TABLE IF EXISTS "calendar" DROP CONSTRAINT IF EXISTS calendar_request_id_fkey')
        # Then drop the column
        op.drop_column('calendar', 'request_id')
    
    # Add patient_id column to prescription table
    op.add_column('prescription', sa.Column('patient_id', sa.Integer(), nullable=False))
    op.create_foreign_key('fk_prescription_patient', 'prescription', 'patient', ['patient_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('fk_prescription_patient', 'prescription', type_='foreignkey')
    op.drop_column('prescription', 'patient_id')
    
    # Add request_id column back to calendar table
    op.add_column('calendar', sa.Column('request_id', sa.INTEGER(), nullable=True))
    op.create_foreign_key('fk_calendar_request', 'calendar', 'request', ['request_id'], ['id'])
    # ### end Alembic commands ###
